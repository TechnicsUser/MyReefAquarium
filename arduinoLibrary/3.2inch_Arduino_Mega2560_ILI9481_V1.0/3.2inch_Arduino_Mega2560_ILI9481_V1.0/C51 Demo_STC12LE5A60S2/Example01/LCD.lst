C51 COMPILER V9.53.0.0   LCD                                                               11/17/2015 12:22:08 PAGE 1   


C51 COMPILER V9.53.0.0, COMPILATION OF MODULE LCD
OBJECT MODULE PLACED IN .\obj\LCD.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE LCD\LCD.c LARGE INCDIR(.\font;.\LCD;.\sys;.\touch;.\GUI;.\USER) DEBUG OB
                    -JECTEXTEND PRINT(.\LCD.lst) TABS(2) OBJECT(.\obj\LCD.obj)

line level    source

   1          #include "sys.h"
   2          #include "lcd.h"
   3          //////////////////////////////////////////////////////////////////////////////////   
   4          //本程序只供学习使用，未经作者许可，不得用于其它任何用途
   5          //测试硬件：单片机STC12LE5A60S2,晶振30M  单片机工作电压3.3V
   6          //QDtech-TFT液晶驱动 for C51
   7          //xiao冯@ShenZhen QDtech co.,LTD
   8          //公司网站:www.qdtech.net
   9          //淘宝网站：http://qdtech.taobao.com
  10          //我司提供技术支持，任何技术问题欢迎随时交流学习
  11          //固话(传真) :+86 0755-23594567 
  12          //手机:15989313508（冯工） 
  13          //邮箱:QDtech2008@gmail.com 
  14          //Skype:QDtech2008
  15          //技术交流QQ群:324828016
  16          //创建日期:2013/5/13
  17          //版本：V1.1
  18          //版权所有，盗版必究。
  19          //Copyright(C) 深圳市全动电子技术有限公司 2009-2019
  20          //All rights reserved
  21          //********************************************************************************
  22          
  23          /**************************************************************************************
  24          //=======================================液晶屏数据线接线==========================================//
  25          //P2组高8位数据口,DB8-DB15依次连接P2^0-P2^7;8位模式下只使用高8位
  26          #define  LCD_DataPortH P2 
  27          //P0组低8位数据口,DB0-DB7依次连接P0^0-P0^7;请确认P0口已经上拉10K电阻,不宜太小，最小4.7K,推荐10K.    
  28          #define  LCD_DataPortL P0     
  29          //=======================================液晶屏控制线接线==========================================//
  30          CS=P1^3;    //片选  
  31          RS=P1^2;      //数据/命令切换
  32          WR=P1^1;    //写控制
  33          RD=P1^0;    //读控制
  34          RESET=P3^3;   //复位 
  35          LCD_BL=P3^2;  //背光控制
  36          //=========================================触摸屏触接线=========================================//
  37          //不使用触摸或者模块本身不带触摸，则可不连接
  38          DCLK    =    P3^6; //触摸屏SPI总线时钟信号接P3.6  
  39          TCS       =    P3^7; //触摸片选TCS接P3.7
  40          DIN       =    P3^4; //MOSI接P3.4 
  41          DOUT      =    P3^5; //MISO接P3.5                                              
  42          Penirq    =    P4^0; //PEN引脚接P4.0，如单片机无P4组，请自行更改其他可用IO并修改代码定义
  43          **************************************************************************************************/ 
  44          
  45          //LCD的画笔颜色和背景色    
  46          u16 POINT_COLOR=0x0000; //画笔颜色
  47          u16 BACK_COLOR=0xFFFF;  //背景色 
  48          //管理LCD重要参数
  49          //默认为竖屏
  50          _lcd_dev lcddev;
  51          
  52          
  53          
  54          //******************************************************************
C51 COMPILER V9.53.0.0   LCD                                                               11/17/2015 12:22:08 PAGE 2   

  55          //函数名：  LCD_Write_Bus
  56          //作者：    xiao冯@全动电子
  57          //日期：    2013-02-22
  58          //功能：    向液晶屏总线写入数据(LCD驱动内部函数)
  59          //输入参数：VH:高8位数据
  60          //          VL:低8位数据
  61          //返回值：  无
  62          //修改记录：无
  63          //******************************************************************
  64          
  65          void LCD_Write_Bus(char VH,char VL)   
  66          {
  67   1        LCD_CS=0;
  68   1        
  69   1        LCD_WR=0; 
  70   1        LCD_DataPortH=VH; 
  71   1        LCD_DataPortL=VL;     
  72   1        LCD_WR=1; 
  73   1        
  74   1        LCD_CS=1;
  75   1      }
  76          
  77          
  78          
  79          //******************************************************************
  80          //函数名：  LCD_WR_DATA8
  81          //作者：    xiao冯@全动电子
  82          //日期：    2013-02-22
  83          //功能：    向液晶屏总线写入写8位数据
  84          //输入参数：VH:高8位数据
  85          //          VL:低8位数据
  86          //返回值：  无
  87          //修改记录：无
  88          //******************************************************************
  89          void LCD_WR_DATA8(char VH,char VL) 
  90          {
  91   1        LCD_RS=1;
  92   1        LCD_Write_Bus(VH,VL);
  93   1      } 
  94          
  95          //******************************************************************
  96          //函数名：  LCD_WR_REG
  97          //作者：    xiao冯@全动电子
  98          //日期：    2013-02-22
  99          //功能：    向液晶屏总线写入写16位指令
 100          //输入参数：Reg:待写入的指令值
 101          //返回值：  无
 102          //修改记录：无
 103          //******************************************************************
 104          void LCD_WR_REG(int Reg)   
 105          { 
 106   1        LCD_RS=0;
 107   1        LCD_Write_Bus(Reg>>8,Reg);
 108   1      } 
 109          
 110          //******************************************************************
 111          //函数名：  LCD_WR_DATA
 112          //作者：    xiao冯@全动电子
 113          //日期：    2013-02-22
 114          //功能：    向液晶屏总线写入写16位数据
 115          //输入参数：Data:待写入的数据
 116          //返回值：  无
C51 COMPILER V9.53.0.0   LCD                                                               11/17/2015 12:22:08 PAGE 3   

 117          //修改记录：无
 118          //******************************************************************
 119           void LCD_WR_DATA(int Data)
 120          {
 121   1        LCD_RS=1;
 122   1        LCD_Write_Bus(Data>>8,Data);
 123   1      }
 124          
 125          //******************************************************************
 126          //函数名：  LCD_WriteReg
 127          //作者：    xiao冯@全动电子
 128          //日期：    2013-02-22
 129          //功能：    写寄存器数据
 130          //输入参数：LCD_Reg:寄存器地址
 131          //      LCD_RegValue:要写入的数据
 132          //返回值：  无
 133          //修改记录：无
 134          //******************************************************************
 135          void LCD_WriteReg(u16 LCD_Reg, u16 LCD_RegValue)
 136          {
 137   1        LCD_WR_REG(LCD_Reg);
 138   1        LCD_WR_DATA(LCD_RegValue);
 139   1      }
 140          
 141          //******************************************************************
 142          //函数名：  LCD_WriteRAM_Prepare
 143          //作者：    xiao冯@全动电子
 144          //日期：    2013-02-22
 145          //功能：    开始写GRAM
 146          //      在给液晶屏传送RGB数据前，应该发送写GRAM指令
 147          //输入参数：无
 148          //返回值：  无
 149          //修改记录：无
 150          //******************************************************************
 151          void LCD_WriteRAM_Prepare(void)
 152          {
 153   1        LCD_WR_REG(lcddev.wramcmd);   
 154   1      }
 155          
 156          
 157          //******************************************************************
 158          //函数名：  LCD_Clear
 159          //作者：    xiao冯@全动电子
 160          //日期：    2013-02-22
 161          //功能：    LCD全屏填充清屏函数
 162          //输入参数：Color:要清屏的填充色
 163          //返回值：  无
 164          //修改记录：无
 165          //******************************************************************
 166          void LCD_Clear(u16 Color)
 167          {
 168   1        u32 index=0; 
 169   1      u32 total=0;  
 170   1      total=lcddev.width*lcddev.height;  
 171   1        LCD_SetWindows(0,0,lcddev.width-1,lcddev.height-1); 
 172   1        LCD_RS=1;
 173   1        LCD_CS=0;   
 174   1        for(index=0;index<total;index++)
 175   1        {
 176   2        LCD_DataPortH=Color>>8; 
 177   2        LCD_DataPortL=Color;  
 178   2        LCD_WR=0;
C51 COMPILER V9.53.0.0   LCD                                                               11/17/2015 12:22:08 PAGE 4   

 179   2        LCD_WR=1;   
 180   2        }
 181   1        LCD_CS=1; 
 182   1      } 
 183          
 184          //******************************************************************
 185          //函数名：  LCD_DrawPoint
 186          //作者：    xiao冯@全动电子
 187          //日期：    2013-02-22
 188          //功能：    在指定位置写入一个像素点数据
 189          //输入参数：(x,y):光标坐标
 190          //返回值：  无
 191          //修改记录：无
 192          //******************************************************************
 193          void LCD_DrawPoint(u16 x,u16 y)
 194          {
 195   1        LCD_SetCursor(x,y);//设置光标位置 
 196   1      #if LCD_USE8BIT_MODEL==1
 197   1        LCD_CS=0;
 198   1        LCD_RD=1;
 199   1        LCD_RS=1;//写地址    
 200   1        LCD_DataPortL=(POINT_COLOR>>8); 
 201   1        LCD_WR=0;
 202   1        LCD_WR=1;
 203   1        LCD_DataPortL=POINT_COLOR;  
 204   1        LCD_WR=0;
 205   1        LCD_WR=1;  
 206   1        LCD_CS=1;
 207   1      #else
                LCD_WR_DATA(POINT_COLOR); 
              #endif
 210   1      }  
 211          //******************************************************************
 212          //函数名：  LCD_DrawPoint_16Bit
 213          //作者：    xiao冯@全动电子
 214          //日期：    2013-02-22
 215          //功能：    8位总线下如何写入一个16位数据
 216          //输入参数：(x,y):光标坐标
 217          //返回值：  无
 218          //修改记录：无
 219          //******************************************************************
 220          void LCD_DrawPoint_16Bit(u16 color)
 221          {
 222   1      #if LCD_USE8BIT_MODEL==1
 223   1        LCD_CS=0;
 224   1        LCD_RD=1;
 225   1        LCD_RS=1;//写地址    
 226   1        LCD_DataPortL=(color>>8); 
 227   1        LCD_WR=0;
 228   1        LCD_WR=1;
 229   1        LCD_DataPortL=color;  
 230   1        LCD_WR=0;
 231   1        LCD_WR=1;  
 232   1        LCD_CS=1;
 233   1      #else
                LCD_WR_DATA(color); 
              #endif
 236   1      
 237   1      
 238   1      }
 239          //******************************************************************
 240          //函数名：  LCD_Reset
C51 COMPILER V9.53.0.0   LCD                                                               11/17/2015 12:22:08 PAGE 5   

 241          //作者：    xiao冯@全动电子
 242          //日期：    2013-02-22
 243          //功能：    LCD复位函数，液晶初始化前要调用此函数
 244          //输入参数：无
 245          //返回值：  无
 246          //修改记录：无
 247          //******************************************************************
 248          void LCD_Reset(void)
 249          {
 250   1        LCD_RESET=1;
 251   1        delay_ms(50); 
 252   1        LCD_RESET=0;
 253   1        delay_ms(50);
 254   1        LCD_RESET=1;
 255   1        delay_ms(50);
 256   1      }
 257          
 258          //******************************************************************
 259          //函数名：  LCD_Init
 260          //作者：    xiao冯@全动电子
 261          //日期：    2013-02-22
 262          //功能：    LCD初始化
 263          //输入参数：无
 264          //返回值：  无
 265          //修改记录：无
 266          //******************************************************************
 267          void LCD_Init(void)
 268          {
 269   1        LCD_Reset(); //初始化之前复位
 270   1        //LCD_RD=1;  //RD引脚没有用到，拉高处理
 271   1      
 272   1        //=========================液晶屏初始化=============================//
 273   1        LCD_WR_REG(0x11);
 274   1        delay_ms(20);
 275   1        LCD_WR_REG(0xD0);
 276   1        LCD_WR_DATA(0x07);
 277   1        LCD_WR_DATA(0x42);
 278   1        LCD_WR_DATA(0x18);
 279   1        
 280   1        LCD_WR_REG(0xD1);
 281   1        LCD_WR_DATA(0x00);
 282   1        LCD_WR_DATA(0x07);//07
 283   1        LCD_WR_DATA(0x10);
 284   1        
 285   1        LCD_WR_REG(0xD2);
 286   1        LCD_WR_DATA(0x01);
 287   1        LCD_WR_DATA(0x02);
 288   1        
 289   1        LCD_WR_REG(0xC0);
 290   1        LCD_WR_DATA(0x10);
 291   1        LCD_WR_DATA(0x3B);
 292   1        LCD_WR_DATA(0x00);
 293   1        LCD_WR_DATA(0x02);
 294   1        LCD_WR_DATA(0x11);
 295   1        
 296   1        LCD_WR_REG(0xC5);
 297   1        LCD_WR_DATA(0x03);
 298   1        
 299   1        LCD_WR_REG(0xC8);
 300   1        LCD_WR_DATA(0x00);
 301   1        LCD_WR_DATA(0x32);
 302   1        LCD_WR_DATA(0x36);
C51 COMPILER V9.53.0.0   LCD                                                               11/17/2015 12:22:08 PAGE 6   

 303   1        LCD_WR_DATA(0x45);
 304   1        LCD_WR_DATA(0x06);
 305   1        LCD_WR_DATA(0x16);
 306   1        LCD_WR_DATA(0x37);
 307   1        LCD_WR_DATA(0x75);
 308   1        LCD_WR_DATA(0x77);
 309   1        LCD_WR_DATA(0x54);
 310   1        LCD_WR_DATA(0x0C);
 311   1        LCD_WR_DATA(0x00);
 312   1        
 313   1        LCD_WR_REG(0x36);
 314   1        LCD_WR_DATA(0x0A);
 315   1        
 316   1        LCD_WR_REG(0x3A);
 317   1        LCD_WR_DATA(0x55);
 318   1        
 319   1        LCD_WR_REG(0x2A);
 320   1        LCD_WR_DATA(0x00);
 321   1        LCD_WR_DATA(0x00);
 322   1        LCD_WR_DATA(0x01);
 323   1        LCD_WR_DATA(0x3F);
 324   1        
 325   1        LCD_WR_REG(0x2B);
 326   1        LCD_WR_DATA(0x00);
 327   1        LCD_WR_DATA(0x00);
 328   1        LCD_WR_DATA(0x01);
 329   1        LCD_WR_DATA(0xE0);
 330   1        delay_ms(120);
 331   1        LCD_WR_REG(0x29);
 332   1        LCD_WR_REG(0x002c); 
 333   1      
 334   1        //设置LCD属性参数
 335   1        LCD_SetParam();//设置LCD参数   
 336   1        LCD_BL=1;//点亮背光  
 337   1      }
 338          //******************************************************************
 339          //函数名：  LCD_SetWindows
 340          //作者：    xiao冯@全动电子
 341          //日期：    2013-02-22
 342          //功能：    设置显示窗口
 343          //输入参数：(xStar,yStar):窗口左上角起始坐标
 344          //        (xEnd,yEnd):窗口右下角结束坐标
 345          //返回值：  无
 346          //修改记录：无
 347          //******************************************************************
 348          void LCD_SetWindows(u16 xStar, u16 yStar,u16 xEnd,u16 yEnd)
 349          { 
 350   1        LCD_WR_REG(lcddev.setxcmd); 
 351   1        LCD_WR_DATA(xStar>>8);
 352   1        LCD_WR_DATA(xStar);   
 353   1        LCD_WR_DATA(xEnd>>8);
 354   1        LCD_WR_DATA(xEnd);
 355   1      
 356   1        LCD_WR_REG(lcddev.setycmd); 
 357   1        LCD_WR_DATA(yStar>>8);
 358   1        LCD_WR_DATA(yStar);   
 359   1        LCD_WR_DATA(yEnd>>8);
 360   1        LCD_WR_DATA(yEnd);
 361   1      
 362   1        LCD_WriteRAM_Prepare(); //开始写入GRAM    
 363   1      }   
 364          
C51 COMPILER V9.53.0.0   LCD                                                               11/17/2015 12:22:08 PAGE 7   

 365          //******************************************************************
 366          //函数名：  LCD_SetCursor
 367          //作者：    xiao冯@全动电子
 368          //日期：    2013-02-22
 369          //功能：    设置光标位置
 370          //输入参数：Xpos:横坐标
 371          //      Ypos:纵坐标
 372          //返回值：  无
 373          //修改记录：无
 374          //******************************************************************
 375          void LCD_SetCursor(u16 Xpos, u16 Ypos)
 376          {               
 377   1        LCD_SetWindows(Xpos,Ypos,Xpos+1,Ypos+1);      
 378   1      } 
 379          
 380          //******************************************************************
 381          //函数名：  LCD_SetParam
 382          //作者：    xiao冯@全动电子
 383          //日期：    2013-02-22
 384          //功能：    设置LCD参数，方便进行横竖屏模式切换
 385          //输入参数：无
 386          //返回值：  无
 387          //修改记录：无
 388          //******************************************************************
 389          void LCD_SetParam(void)
 390          { 
 391   1        lcddev.setxcmd=0x2A;
 392   1        lcddev.setycmd=0x2B;
 393   1        lcddev.wramcmd=0x2C;
 394   1      #if USE_HORIZONTAL==1 //使用横屏    
 395   1        lcddev.dir=1;//横屏
 396   1        lcddev.width=480;
 397   1        lcddev.height=320;      
 398   1        LCD_WriteReg(0x36,0x28);//BGR==1,MY==1,MX==0,MV==1  63
 399   1      #else//竖屏
                lcddev.dir=0;//竖屏             
                lcddev.width=320;
                lcddev.height=480;  
                LCD_WriteReg(0x36,0X0A);//BGR==1,MY==0,MX==0,MV==0
              #endif
 405   1      }   
 406          
 407          
 408          
 409          
 410          
 411          
 412          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    797    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     17      18
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
